//  BiometricAuth.swift

import Foundation
import LocalAuthentication

enum BiometricType {
    case none
    case touchID
    case faceID
}

class BiometricAuth {
    // MARK: - Properties
    let context = LAContext()
    var loginReason = "Login with Biometric Authentication."
    
    // MARK: - Helper Fuctions
    func canEvaluatePolicy() -> Bool {
        return context.canEvaluatePolicy(.deviceOwnerAuthenticationWithBiometrics, error: nil)
    }
    
    func biometricType() -> BiometricType {
        let _ = context.canEvaluatePolicy(.deviceOwnerAuthenticationWithBiometrics, error: nil)
        switch context.biometryType {
        case .none:
            return .none
        case .touchID:
            return .touchID
        case .faceID:
            return .faceID
        @unknown default:
            fatalError()
        }
    }
    
    func authenticateUser(completion: @escaping (String?) -> Void) {
        guard canEvaluatePolicy() else {
            completion("Face ID / Touch ID not available")
            return
        }
        // Adjust the title of cancel and enter passcode buttons on Face not Recognize Alert
        context.localizedCancelTitle = "OK"
        context.localizedFallbackTitle = "Try Face ID Again"
        context.evaluatePolicy(.deviceOwnerAuthenticationWithBiometrics, localizedReason: loginReason) { (success, evaluateError) in
            if success {
                LogController.shared.logSuccess(message: "Authenticate User with Biometric!", type: "", at: "\(#line) --- OF \(#function) --- IN \(#file)")
                DispatchQueue.main.async {
                    completion(nil)
                }
            } else {
                let message: String
                switch evaluateError {
                case LAError.authenticationFailed?:
                    message = "There was a problem verifying your identity using biometric."
                case LAError.userCancel?:
                    message = "You have canceled authenticate with biometric."
                case LAError.userFallback?:
                    message = "You have pressed to authenticate with password."
                case LAError.biometryNotAvailable?:
                    message = "Face ID/Touch ID is not available."
                case LAError.biometryNotEnrolled?:
                    message = "Face ID/Touch ID is not set up."
                case LAError.biometryLockout?:
                    message = "Face ID/Touch ID is locked."
                default:
                    message = "Face ID/Touch ID may not be configured"
                }
                completion(message)
            }
        }
    }
}
