
//  AppUtility.swift


import Foundation
import UIKit

struct AppUtility {
    // Lock landscape or portrait mode on the screen
    static func lockOrientation(_ orientation: UIInterfaceOrientationMask) {
        if let delegate = UIApplication.shared.delegate as? AppDelegate {
            delegate.orientationLock = orientation
        }
    }
    
    // Added method to adjust lock and rotate to the desired orientation
    static func lockOrientation(_ orientation: UIInterfaceOrientationMask, andRotateTo rotateOrientation:UIInterfaceOrientation) {
        self.lockOrientation(orientation)
        UIDevice.current.setValue(rotateOrientation.rawValue, forKey: "orientation")
        UINavigationController.attemptRotationToDeviceOrientation()
    }
    
    static func isDeviceInLandscapeMode() -> Bool {
        if UIDevice.current.orientation.isLandscape {
            return true
        } else {
            return false
        }
    }
}

// MARK: - TO USE...
/*
 override func viewWillAppear(_ animated: Bool) {
 super.viewWillAppear(animated)
 AppUtility.lockOrientation(.portrait)
 // Or to rotate and lock
 // AppUtility.lockOrientation(.portrait, andRotateTo: .portrait)
 }
 
 override func viewWillDisappear(_ animated: Bool) {
 super.viewWillDisappear(animated)
 // Don't forget to reset when view is being removed
 AppUtility.lockOrientation(.all)
 }
 */
